syntax = "proto3";

package com.vtyug.yug.like.grpc.v1;

import "google/protobuf/timestamp.proto";

option go_package = "proto/like/v1;v1";

// 点赞对象类型
enum LikeObjectType {
    LIKE_OBJECT_TYPE_UNSPECIFIED = 0;
    LIKE_OBJECT_TYPE_POST = 1;        // 帖子
    LIKE_OBJECT_TYPE_COMMENT = 2;     // 评论
    LIKE_OBJECT_TYPE_REPLY = 3;       // 回复
}

// 点赞用户基础信息（只包含点赞服务需要的核心数据）
message LikeUserInfo {
    // 用户ID（用户详细信息需要调用user服务获取）
    uint64 user_id = 1;
    // 点赞时间
    google.protobuf.Timestamp like_time = 2;
}

// 点赞状态
message LikeStatus {
    // 点赞对象ID
    uint64 object_id = 1;
    // 点赞对象类型
    LikeObjectType object_type = 2;
    // 是否已点赞（针对当前用户）
    bool is_liked = 3;
    // 点赞数
    int64 like_count = 4;
    // 最后更新时间
    google.protobuf.Timestamp last_update_time = 5;
}

// 点赞/取消点赞请求
message LikeRequest {
    // 用户ID
    uint64 user_id = 1;
    // 点赞对象ID
    uint64 object_id = 2;
    // 点赞对象类型
    LikeObjectType object_type = 3;
    // true表示点赞，false表示取消点赞
    bool is_like = 4;
}

// 点赞/取消点赞响应
message LikeResponse {
    // 点赞状态
    LikeStatus like_status = 1;
}

// 批量获取点赞状态请求
message BatchGetLikeStatusRequest {
    // 当前用户ID（用于判断是否点赞）
    uint64 user_id = 1;
    // 对象ID列表
    repeated uint64 object_ids = 2;
    // 点赞对象类型
    LikeObjectType object_type = 3;
}

// 批量获取点赞状态响应
message BatchGetLikeStatusResponse {
    // 点赞状态列表
    repeated LikeStatus like_status_list = 1;
}

// 批量点赞/取消点赞请求
message BatchLikeRequest {
    // 用户ID
    uint64 user_id = 1;
    // 批量操作的对象列表
    message LikeObject {
        uint64 object_id = 1;
        LikeObjectType object_type = 2;
    }
    repeated LikeObject objects = 2;
    // true表示点赞，false表示取消点赞
    bool is_like = 3;
}

// 批量点赞/取消点赞响应
message BatchLikeResponse {
    // 批量操作结果
    repeated LikeStatus like_status_list = 1;
}

// 获取用户点赞列表请求
message ListUserLikesRequest {
    // 用户ID
    uint64 user_id = 1;
    // 点赞对象类型，可选
    optional LikeObjectType object_type = 2;
    // 分页大小
    int32 page_size = 3;
    // 分页标记
    string page_token = 4;
}

// 获取用户点赞列表响应
message ListUserLikesResponse {
    // 点赞列表
    repeated LikeStatus like_status_list = 1;
    // 下一页标记，为空表示没有更多数据
    string next_page_token = 2;
    // 总数
    int64 total = 3;
}

// 获取点赞用户列表请求
message ListLikeUsersRequest {
    // 对象ID
    uint64 object_id = 1;
    // 点赞对象类型
    LikeObjectType object_type = 2;
    // 分页大小
    int32 page_size = 3;
    // 分页标记
    string page_token = 4;
}

// 获取点赞用户列表响应
message ListLikeUsersResponse {
    // 点赞用户列表
    repeated LikeUserInfo like_users = 1;
    // 下一页标记
    string next_page_token = 2;
    // 总数
    int64 total = 3;
}

// 批量删除点赞数据请求
message BatchDeleteLikesRequest {
    // 对象ID列表
    repeated uint64 object_ids = 1;
    // 点赞对象类型
    LikeObjectType object_type = 2;
}

// 批量删除点赞数据响应
message BatchDeleteLikesResponse {
    // 删除的记录数
    int64 deleted_count = 1;
}

// 获取热度排行请求
message GetHotRankingRequest {
    // 点赞对象类型
    LikeObjectType object_type = 1;
    // 开始时间
    google.protobuf.Timestamp start_time = 2;
    // 结束时间
    google.protobuf.Timestamp end_time = 3;
    // 返回的排行数量
    int32 limit = 4;
}

// 获取热度排行响应
message GetHotRankingResponse {
    // 排行结果
    message RankItem {
        // 对象ID
        uint64 object_id = 1;
        // 点赞数
        int64 like_count = 2;
        // 小时增长率（相比上一小时）
        double hourly_growth_rate = 3;
    }
    repeated RankItem ranks = 1;
}

// 统计点赞数请求
message CountLikesRequest {
    // 点赞对象ID列表
    repeated uint64 object_ids = 1;
    // 点赞对象类型
    LikeObjectType object_type = 2;
    // 开始时间
    google.protobuf.Timestamp start_time = 3;
    // 结束时间
    google.protobuf.Timestamp end_time = 4;
    // 是否按小时分组统计
    bool group_by_hour = 5;
}

// 统计点赞数响应
message CountLikesResponse {
    // 统计结果
    message LikeCount {
        // 对象ID
        uint64 object_id = 1;
        // 时间点（当group_by_hour为true时才有值）
        google.protobuf.Timestamp time = 2;
        // 点赞数
        int64 count = 3;
    }
    repeated LikeCount counts = 1;
}

message ListLikeUserIdsRequest {
    // 对象ID
    uint64 object_id = 1;
    // 点赞对象类型
    LikeObjectType object_type = 2;
    // 分页大小
    int32 page_size = 3;
    // 分页标记
    string page_token = 4;
}

message ListLikeUserIdsResponse {
    // 点赞用户ID列表
    repeated uint64 user_ids = 1;
    // 下一页标记
    string next_page_token = 2;
    // 总数
    int64 total = 3;
}
