syntax = "proto3";

package chat.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/vtyug/yug-server/api/chat/v1;v1";

// ChatService 聊天服务
service ChatService {
  // SendMessage 发送消息
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {
    option (google.api.http) = {
      post: "/v1/chat/messages"
      body: "*"
    };
  }

  // ListMessages 获取消息列表
  rpc ListMessages(ListMessagesRequest) returns (ListMessagesResponse) {
    option (google.api.http) = {
      get: "/v1/chat/messages"
    };
  }

  // MarkMessageRead 标记消息为已读
  rpc MarkMessageRead(MarkMessageReadRequest) returns (MarkMessageReadResponse) {
    option (google.api.http) = {
      post: "/v1/chat/messages/{message_id}/read"
      body: "*"
    };
  }

  // RecallMessage 撤回消息
  rpc RecallMessage(RecallMessageRequest) returns (RecallMessageResponse) {
    option (google.api.http) = {
      post: "/v1/chat/messages/{message_id}/recall"
      body: "*"
    };
  }

  // DeleteMessage 删除消息
  rpc DeleteMessage(DeleteMessageRequest) returns (DeleteMessageResponse) {
    option (google.api.http) = {
      delete: "/v1/chat/messages/{message_id}"
    };
  }

  // Connect 建立实时聊天连接
  rpc Connect(ConnectRequest) returns (stream ChatMessage) {}
}

// Message 消息
message Message {
  // 消息ID
  uint64 id = 1;
  // 发送者ID
  uint64 sender_id = 2;
  // 群组ID（群聊消息）
  uint64 group_id = 3;
  // 接收者ID（私聊消息）
  uint64 receiver_id = 4;
  // 消息内容
  string content = 5;
  // 消息类型（1:文本 2:图片 3:语音 4:视频 5:文件）
  int32 type = 6;
  // 额外信息（JSON格式）
  string extra = 7;
  // 是否已读
  bool is_read = 8;
  // 已读时间
  google.protobuf.Timestamp read_at = 9;
  // 是否已撤回
  bool is_recalled = 10;
  // 撤回时间
  google.protobuf.Timestamp recalled_at = 11;
  // 是否已删除
  bool is_deleted = 12;
  // 删除时间
  google.protobuf.Timestamp deleted_at = 13;
  // 创建时间
  google.protobuf.Timestamp created_at = 14;
}

// SendMessageRequest 发送消息请求
message SendMessageRequest {
  // 群组ID（群聊消息）
  uint64 group_id = 1;
  // 接收者ID（私聊消息）
  uint64 receiver_id = 2;
  // 消息内容
  string content = 3;
  // 消息类型（1:文本 2:图片 3:语音 4:视频 5:文件）
  int32 type = 4;
  // 额外信息（JSON格式）
  string extra = 5;
  uint64 user_id = 6;// 占位，暂时手动
}

// SendMessageResponse 发送消息响应
message SendMessageResponse {
  // 消息
  Message message = 1;
}

// ListMessagesRequest 获取消息列表请求
message ListMessagesRequest {
  // 群组ID（群聊消息）
  uint64 group_id = 1;
  // 发送者ID（私聊消息）
  uint64 sender_id = 2;
  // 接收者ID（私聊消息）
  uint64 receiver_id = 3;
  // 每页数量
  int32 page_size = 4;
  // 分页标记
  string page_token = 5;
}

// ListMessagesResponse 获取消息列表响应
message ListMessagesResponse {
  // 消息列表
  repeated Message messages = 1;
  // 下一页标记
  string next_page_token = 2;
  // 总数
  int32 total = 3;
}

// MarkMessageReadRequest 标记消息为已读请求
message MarkMessageReadRequest {
  // 消息ID
  uint64 message_id = 1;
  // 用户ID
  uint64 user_id = 2;
}

// MarkMessageReadResponse 标记消息为已读响应
message MarkMessageReadResponse {}

// RecallMessageRequest 撤回消息请求
message RecallMessageRequest {
  // 消息ID
  uint64 message_id = 1;
  // 用户ID
  uint64 user_id = 2;
}

// RecallMessageResponse 撤回消息响应
message RecallMessageResponse {}

// DeleteMessageRequest 删除消息请求
message DeleteMessageRequest {
  // 消息ID
  uint64 message_id = 1;
  // 用户ID
  uint64 user_id = 2;
}

// DeleteMessageResponse 删除消息响应
message DeleteMessageResponse {}

// ConnectRequest 建立连接请求
message ConnectRequest {
  uint64 user_id = 1; // 用户ID
}

// ChatMessage 聊天消息
message ChatMessage {
  uint64 message_id = 1;                        // 消息ID
  uint64 sender_id = 2;                         // 发送者ID
  uint64 group_id = 3;                          // 群组ID（群聊消息）
  uint64 receiver_id = 4;                       // 接收者ID（私聊消息）
  string content = 5;                           // 消息内容
  int32 type = 6;                              // 消息类型（1:文本 2:图片 3:语音 4:视频 5:文件）
  string extra = 7;                            // 额外信息（JSON格式）
  google.protobuf.Timestamp created_at = 8;    // 创建时间
} 